// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String
  username  String     @unique
  email     String     @unique
  bio       String?    // Optional bio
  avatarUrl String?    // Profile picture URL
  blogs     Blog[]
  comments  Comment[]  @relation("UserComments")
  followers String[]   // Array of user IDs
  following String[]   // Array of user IDs
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Blog {
  id        String     @id @default(cuid())
  title     String
  content   String     // MDX content
  bannerUrl String     // Banner image URL
  tags      Tag[]      @relation("BlogTags")
  authorId  String
  author    User       @relation(fields: [authorId], references: [id])
  comments  Comment[]  @relation("BlogComments")
  likes     String[]   // Array of user IDs who liked the blog
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Tag {
  id      String  @id @default(cuid())
  name    String  @unique
  blogs   Blog[]  @relation("BlogTags")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  blogId    String
  authorId  String
  blog      Blog     @relation("BlogComments", fields: [blogId], references: [id])
  author    User     @relation("UserComments", fields: [authorId], references: [id])
  parentId  String?  // For replies
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
